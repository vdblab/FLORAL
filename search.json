[{"path":"https://vdblab.github.io/FLORAL/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://vdblab.github.io/FLORAL/articles/Using-FLORAL-for-Microbiome-Analysis.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Using FLORAL for Microbiome Analysis","text":"using data curatedMetagenomicData package. easier installation, saved flat copy data, steps show created.","code":"if (! \"BiocManager\" %in% installed.packages()) install.packages(\"BiocManager\") if (! \"curatedMetagenomicData\" %in% installed.packages()) BiocManager::install(\"curatedMetagenomicData\") if (! \"patchwork\" %in% installed.packages()) install.packages(\"patchwork\") library(curatedMetagenomicData)  # Take a look at the summary of the studies available: curatedMetagenomicData::sampleMetadata  |> group_by(.data$study_name, .data$study_condition) |> count() |> arrange(.data$study_name)  #As an example, let us look at the `YachidaS_2019` study between healthy controls and colorectal cancer (CRC) patients. curatedMetagenomicData::curatedMetagenomicData(\"YachidaS_2019\")  # note --  if you are behind a firewall, see the solutions to 500 errors here: # https://support.bioconductor.org/p/132864/ rawdata <- curatedMetagenomicData::curatedMetagenomicData(\"2021-03-31.YachidaS_2019.relative_abundance\", dryrun = FALSE, counts = TRUE) |>  mergeData() x <- SummarizedExperiment::assays(rawdata)$relative_abundance %>% t() y <- rawdata@colData$disease  save(list = c(\"x\", \"y\"),  file = file.path(\"inst\", \"extdata\", \"YachidaS_2019.Rdata\")) load(system.file(\"extdata\", \"YachidaS_2019.Rdata\", package=\"FLORAL\"))"},{"path":"https://vdblab.github.io/FLORAL/articles/Using-FLORAL-for-Microbiome-Analysis.html","id":"running-floral","dir":"Articles","previous_headings":"","what":"Running FLORAL","title":"Using FLORAL for Microbiome Analysis","text":"extracted data TreeSummarizedExperiment object two objects: taxa matrix x “outcomes” vector y whether patient healthy colorectal cancer (CRC). Note binary outcomes, input vector y needs formatted entries equal either 0 1. addition, need specify family = \"binomial\" FLORAL fit logistic regression model. print progress bar algorithm runs, please use progress = TRUE.","code":"x <- x[y %in% c(\"CRC\",\"healthy\"),] x <- x[,colSums(x >= 100) >= nrow(x)*0.2] # filter low abundance taxa  colnames(x) <- sapply(colnames(x), function(x) strsplit(x,split=\"[|]\")[[1]][length(strsplit(x,split=\"[|]\")[[1]])])  y <- as.numeric(as.factor(y[y %in% c(\"CRC\",\"healthy\")]))-1 fit <- FLORAL(x = x, y = y, family=\"binomial\", ncv=10, progress=TRUE) #> Algorithm running for full dataset:  #> Algorithm running for cv dataset 1 out of 10:  #> Algorithm running for cv dataset 2 out of 10:  #> Algorithm running for cv dataset 3 out of 10:  #> Algorithm running for cv dataset 4 out of 10:  #> Algorithm running for cv dataset 5 out of 10:  #> Algorithm running for cv dataset 6 out of 10:  #> Algorithm running for cv dataset 7 out of 10:  #> Algorithm running for cv dataset 8 out of 10:  #> Algorithm running for cv dataset 9 out of 10:  #> Algorithm running for cv dataset 10 out of 10:"},{"path":"https://vdblab.github.io/FLORAL/articles/Using-FLORAL-for-Microbiome-Analysis.html","id":"interpreting-the-model","dir":"Articles","previous_headings":"","what":"Interpreting the Model","title":"Using FLORAL for Microbiome Analysis","text":"FLORAL, like methods optimization step, two “best” solutions \\(\\lambda\\) available: one minimizing mean squared error (\\(\\lambda_\\min\\)), one maximizing value \\(\\lambda\\) withing 1 standard error minimum mean squared error (\\(\\lambda_{\\text{1se}}\\)). referred min 1se solutions, respectively. can see mean squared error (MSE) coefficients vs log(\\(\\lambda\\)) follows:  plots, vertical dashed line dotted line represent \\(\\lambda_\\min\\) \\(\\lambda_{\\text{1se}}\\), respectively. MSE plot, bands represent plus minus one standard error MSE. coefficient plot, colored lines represent individual taxa, taxa non-zero values \\(\\lambda_\\min\\) \\(\\lambda_{\\text{1se}}\\) selected predictive outcome. view specific names selected taxa, please see fit$selected.feature$min fit$selected.feature$1se vectors. view coefficient estimates, please see fit$best.beta$min fit$best.beta$1se. Without looking ratios, one can crudely interpret positive negative association taxon outcome positive negative sign coefficient estimates. However, recommend referring two-step procedure discussed rigorous interpretation based ratios, derived log-ratio model assumption.","code":"fit$pmse + fit$pcoef head(fit$selected.feature$min) #> [1] \"s__Actinomyces_sp_HMSC035G02\"      \"s__Actinomyces_sp_ICM47\"           #> [3] \"s__Anaerotignum_lactatifermentans\" \"s__Anaerotruncus_colihominis\"      #> [5] \"s__Asaccharobacter_celatus\"        \"s__Bacteroides_caccae\"  head(sort(fit$best.beta$min)) #>          s__Parvimonas_micra s__Actinomyces_sp_HMSC035G02  #>                  -0.08382110                  -0.05707121  #>   s__Collinsella_aerofaciens     s__Holdemania_filiformis  #>                  -0.04769462                  -0.04120521  #> s__Anaerotruncus_colihominis      s__Bacteroides_plebeius  #>                  -0.03639770                  -0.02421877"},{"path":"https://vdblab.github.io/FLORAL/articles/Using-FLORAL-for-Microbiome-Analysis.html","id":"the-two-step-procedure","dir":"Articles","previous_headings":"","what":"The Two-step Procedure","title":"Using FLORAL for Microbiome Analysis","text":"previous section, checked lasso estimates without identifying specific ratios predictive outcome (CRC case). default, FLORAL performs two-step selection procedure use glmnet step regression identify taxa pairs form predictive log-ratios. view pairs, use fit$step2.ratios$min fit$step2.ratios$1se names ratios fit$step2.ratios$min.idx fit$step2.ratios$1se.idx pairs indices original input count matrix x. Note one taxon can occur multiple ratios. interpret positive negative associations outcome, please refer output step regression tables, effect sizes ratios can found. corresponding p-values also available, recommend using p-values criterion rank strength association. recommend directly reporting p-values inference, p-values obtained running first step lasso model without rigorous post-selective inference. However, still valid claim selected log-ratios predictive outcome, demonstrated improved 10-fold cross-validated prediction errors.","code":"head(fit$step2.ratios$`1se`) #> [1] \"s__Bacteroides_plebeius/s__Bacteroides_dorei\"                    #> [2] \"s__Eubacterium_eligens/s__Bacteroides_cellulosilyticus\"          #> [3] \"s__Collinsella_aerofaciens/s__Bifidobacterium_pseudocatenulatum\" #> [4] \"s__Streptococcus_salivarius/s__Actinomyces_sp_HMSC035G02\"        #> [5] \"s__Haemophilus_parainfluenzae/s__Actinomyces_sp_HMSC035G02\"      #> [6] \"s__Erysipelatoclostridium_ramosum/s__Parvimonas_micra\"  fit$step2.ratios$`1se.idx` #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #> [1,]   NA    1    4   12   22   25   26   27   27    44    73    81   114 #> [2,]   NA    2  113  102  128  128  131   90  151    64    80   128   131 fit$step2.tables$`1se` #>                                                                    Estimate #> (Intercept)                                                     -1.13290845 #> s__Bacteroides_plebeius/s__Bacteroides_dorei                    -0.02844973 #> s__Eubacterium_eligens/s__Bacteroides_cellulosilyticus           0.03778557 #> s__Collinsella_aerofaciens/s__Bifidobacterium_pseudocatenulatum -0.04968019 #> s__Streptococcus_salivarius/s__Actinomyces_sp_HMSC035G02         0.07512405 #> s__Haemophilus_parainfluenzae/s__Actinomyces_sp_HMSC035G02       0.03696680 #> s__Erysipelatoclostridium_ramosum/s__Parvimonas_micra            0.04781375 #> s__Holdemania_filiformis/s__Eubacterium_sp_CAG_38               -0.03970198 #> s__Holdemania_filiformis/s__Proteobacteria_bacterium_CAG_139    -0.03442088 #> s__Anaerotruncus_colihominis/s__Clostridium_aldenense           -0.07787635 #> s__Lachnospira_pectinoschiza/s__Ruminococcus_torques             0.03472516 #> s__Roseburia_faecis/s__Actinomyces_sp_HMSC035G02                 0.04784454 #> s__Coprobacter_fastidiosus/s__Parvimonas_micra                   0.06889677 #>                                                                 Std. Error #> (Intercept)                                                     0.26269116 #> s__Bacteroides_plebeius/s__Bacteroides_dorei                    0.01109385 #> s__Eubacterium_eligens/s__Bacteroides_cellulosilyticus          0.01394149 #> s__Collinsella_aerofaciens/s__Bifidobacterium_pseudocatenulatum 0.01517330 #> s__Streptococcus_salivarius/s__Actinomyces_sp_HMSC035G02        0.02810284 #> s__Haemophilus_parainfluenzae/s__Actinomyces_sp_HMSC035G02      0.02287159 #> s__Erysipelatoclostridium_ramosum/s__Parvimonas_micra           0.01975876 #> s__Holdemania_filiformis/s__Eubacterium_sp_CAG_38               0.01630423 #> s__Holdemania_filiformis/s__Proteobacteria_bacterium_CAG_139    0.01847908 #> s__Anaerotruncus_colihominis/s__Clostridium_aldenense           0.02175762 #> s__Lachnospira_pectinoschiza/s__Ruminococcus_torques            0.01312878 #> s__Roseburia_faecis/s__Actinomyces_sp_HMSC035G02                0.01770898 #> s__Coprobacter_fastidiosus/s__Parvimonas_micra                  0.01828425 #>                                                                   z value #> (Intercept)                                                     -4.312701 #> s__Bacteroides_plebeius/s__Bacteroides_dorei                    -2.564460 #> s__Eubacterium_eligens/s__Bacteroides_cellulosilyticus           2.710297 #> s__Collinsella_aerofaciens/s__Bifidobacterium_pseudocatenulatum -3.274185 #> s__Streptococcus_salivarius/s__Actinomyces_sp_HMSC035G02         2.673183 #> s__Haemophilus_parainfluenzae/s__Actinomyces_sp_HMSC035G02       1.616276 #> s__Erysipelatoclostridium_ramosum/s__Parvimonas_micra            2.419876 #> s__Holdemania_filiformis/s__Eubacterium_sp_CAG_38               -2.435072 #> s__Holdemania_filiformis/s__Proteobacteria_bacterium_CAG_139    -1.862695 #> s__Anaerotruncus_colihominis/s__Clostridium_aldenense           -3.579268 #> s__Lachnospira_pectinoschiza/s__Ruminococcus_torques             2.644964 #> s__Roseburia_faecis/s__Actinomyces_sp_HMSC035G02                 2.701711 #> s__Coprobacter_fastidiosus/s__Parvimonas_micra                   3.768094 #>                                                                     Pr(>|z|) #> (Intercept)                                                     0.0000161272 #> s__Bacteroides_plebeius/s__Bacteroides_dorei                    0.0103336444 #> s__Eubacterium_eligens/s__Bacteroides_cellulosilyticus          0.0067222886 #> s__Collinsella_aerofaciens/s__Bifidobacterium_pseudocatenulatum 0.0010596731 #> s__Streptococcus_salivarius/s__Actinomyces_sp_HMSC035G02        0.0075135152 #> s__Haemophilus_parainfluenzae/s__Actinomyces_sp_HMSC035G02      0.1060346352 #> s__Erysipelatoclostridium_ramosum/s__Parvimonas_micra           0.0155258098 #> s__Holdemania_filiformis/s__Eubacterium_sp_CAG_38               0.0148888266 #> s__Holdemania_filiformis/s__Proteobacteria_bacterium_CAG_139    0.0625051926 #> s__Anaerotruncus_colihominis/s__Clostridium_aldenense           0.0003445584 #> s__Lachnospira_pectinoschiza/s__Ruminococcus_torques            0.0081699524 #> s__Roseburia_faecis/s__Actinomyces_sp_HMSC035G02                0.0068983632 #> s__Coprobacter_fastidiosus/s__Parvimonas_micra                  0.0001644988"},{"path":"https://vdblab.github.io/FLORAL/articles/Using-FLORAL-for-Microbiome-Analysis.html","id":"generating-taxa-selection-probabilities","dir":"Articles","previous_headings":"","what":"Generating taxa selection probabilities","title":"Using FLORAL for Microbiome Analysis","text":"encouraged run k-fold cross-validation several times account random fold splits. FLORAL provides mcv.FLORAL functions repeat cross-validations mcv times ncore cores. output summarizes taxa selection probabilities, average coefficients based \\(\\lambda_\\min\\) \\(\\lambda_{\\text{1se}}\\). Interpretable plots can created plot = TRUE specified.","code":"mcv.fit <- mcv.FLORAL(mcv=5,                       ncore=1,                       x = x,                        y = y,                        family = \"binomial\",                        ncv = 3,                       progress=TRUE) #> Warning in mcv.FLORAL(mcv = 5, ncore = 1, x = x, y = y, family = \"binomial\", : #> Using 1 core for computation. #> Random 3-fold cross-validation: 1 #> Random 3-fold cross-validation: 2 #> Random 3-fold cross-validation: 3 #> Random 3-fold cross-validation: 4 #> Random 3-fold cross-validation: 5 mcv.fit$p_min #Other options are also available #mcv.fit$p_min_ratio #mcv.fit$p_1se #mcv.fit$p_1se_ratio"},{"path":"https://vdblab.github.io/FLORAL/articles/Using-FLORAL-for-Microbiome-Analysis.html","id":"elastic-net","dir":"Articles","previous_headings":"","what":"Elastic net","title":"Using FLORAL for Microbiome Analysis","text":"Beyond lasso model, FLORAL also supports elastic net models specifying tuning parameter 0 1. Lasso penalty used =1 ridge penalty used =0. .FLORAL function can help investigate prediction performance different choices return plot corresponding prediction metric trajectories choice \\(\\lambda\\).","code":"a.fit <- a.FLORAL(a = c(0.1,0.5,1),                   ncore = 1,                   x = x,                    y = y,                    family = \"binomial\",                    ncv = 3,                   progress=TRUE) #> Warning in a.FLORAL(a = c(0.1, 0.5, 1), ncore = 1, x = x, y = y, family = #> \"binomial\", : Using 1 core for computation. #> Running for a = 0.1 #> Running for a = 0.5 #> Running for a = 1  a.fit"},{"path":"https://vdblab.github.io/FLORAL/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Teng Fei. Author, maintainer, copyright holder. Tyler Funnell. Author. Nicholas Waters. Author. Sandeep Raj. Author.","code":""},{"path":"https://vdblab.github.io/FLORAL/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fei T, Funnell T, Waters N, Raj S (2023). FLORAL: Fit Log-Ratio Lasso Regression Compositional Data. R package version 0.1.0.9001, https://vdblab.github.io/FLORAL/.","code":"@Manual{,   title = {FLORAL: Fit Log-Ratio Lasso Regression for Compositional Data},   author = {Teng Fei and Tyler Funnell and Nicholas Waters and Sandeep Raj},   year = {2023},   note = {R package version 0.1.0.9001},   url = {https://vdblab.github.io/FLORAL/}, }"},{"path":"https://vdblab.github.io/FLORAL/index.html","id":"floral-fit-log-ratio-lasso-regression-for-compositional-covariates-","dir":"","previous_headings":"","what":"Fit Log-Ratio Lasso Regression for Compositional Data","title":"Fit Log-Ratio Lasso Regression for Compositional Data","text":"FLORAL package open-source computational tool perform log-ratio lasso regression modeling compositional feature selection continuous, binary, time--event, competing risk outcomes. proposed method adapts augmented Lagrangian algorithm zero-sum constraint optimization problem enabling two-stage screening process extended false-positive control. associated preprint FLORAL available bioRxiv.","code":""},{"path":"https://vdblab.github.io/FLORAL/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fit Log-Ratio Lasso Regression for Compositional Data","text":"can install FLORAL following code. can install development version FLORAL GitHub :","code":"install.packages(\"FLORAL\") # install.packages(\"devtools\") devtools::install_github(\"vdblab/FLORAL\")"},{"path":"https://vdblab.github.io/FLORAL/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Fit Log-Ratio Lasso Regression for Compositional Data","text":"toy example linear regression 10-fold cross-validation simulated data 50 samples 100 compositional features. Option progress=TRUE can used show progress bar running algorithm. data simulation procedure described preprint. view plots cross-validated prediction error parameter coefficients, use fit$pmse fit$pcoef:  view selected compositional features, use fit$selected.feature, features sorted names. Features min 1se correspond penalty parameter λmin λ1se, respectively. Features min.2stage 1se.2stage obtained applying 2-stage filtering based features min 1se, respectively. recommend interpreting selected compositional features potential predictive markers outcome regression model sense cross-validated prediction error improved considering selected features. get specific log-ratios selected 2-stage procedure, use fit$step2.log-ratios, min 1se display log-ratios features. identified ratio, min.idx 1se.idx return column indices original input matrix two corresponding features forming ratio. detailed interpretations can obtained selected log-ratios. First, selected log-ratios also improve cross-validated prediction errors log-ratios derived constrained lasso estimate. Moreover, guided association table log-ratios outcome, possible interpret directions covariate effects associated certain log-ratios outcome. view detailed associations selected log-ratios outcome, use fit$step2.tables print summary tables multivariable stepwise regression models obtained 2-stage procedure. binary survival outcomes, please specify family=\"binomial\", family=\"cox\", family=\"finegray\" accordingly.","code":"set.seed(23420) library(FLORAL)  dat <- simu(n=50,p=100,model=\"linear\") fit <- FLORAL(dat$xcount,dat$y,family=\"gaussian\",ncv=10,progress=FALSE) fit$selected.feature #> $min #>  [1] \"taxa1\"  \"taxa10\" \"taxa13\" \"taxa2\"  \"taxa20\" \"taxa3\"  \"taxa32\" \"taxa39\" #>  [9] \"taxa5\"  \"taxa6\"  \"taxa60\" \"taxa7\"  \"taxa75\" \"taxa76\" \"taxa79\" \"taxa8\"  #> [17] \"taxa84\" \"taxa9\"  \"taxa92\" #>  #> $`1se` #>  [1] \"taxa1\"  \"taxa10\" \"taxa13\" \"taxa2\"  \"taxa20\" \"taxa3\"  \"taxa32\" \"taxa39\" #>  [9] \"taxa5\"  \"taxa6\"  \"taxa7\"  \"taxa75\" \"taxa8\"  \"taxa84\" \"taxa9\"  #>  #> $min.2stage #>  [1] \"taxa1\"  \"taxa10\" \"taxa13\" \"taxa2\"  \"taxa20\" \"taxa3\"  \"taxa32\" \"taxa5\"  #>  [9] \"taxa6\"  \"taxa60\" \"taxa7\"  \"taxa79\" \"taxa8\"  \"taxa84\" \"taxa9\"  \"taxa92\" #>  #> $`1se.2stage` #>  [1] \"taxa1\"  \"taxa10\" \"taxa13\" \"taxa2\"  \"taxa20\" \"taxa3\"  \"taxa32\" \"taxa5\"  #>  [9] \"taxa6\"  \"taxa7\"  \"taxa8\"  \"taxa84\" \"taxa9\" fit$step2.ratios #> $min #>  [1] \"taxa1/taxa13\" \"taxa1/taxa20\" \"taxa1/taxa84\" \"taxa2/taxa5\"  \"taxa3/taxa8\"  #>  [6] \"taxa3/taxa92\" \"taxa5/taxa8\"  \"taxa6/taxa9\"  \"taxa7/taxa10\" \"taxa7/taxa79\" #> [11] \"taxa8/taxa60\" \"taxa9/taxa32\" \"taxa9/taxa92\" #>  #> $`1se` #>  [1] \"taxa1/taxa13\" \"taxa1/taxa20\" \"taxa1/taxa84\" \"taxa2/taxa5\"  \"taxa3/taxa8\"  #>  [6] \"taxa5/taxa8\"  \"taxa6/taxa7\"  \"taxa6/taxa9\"  \"taxa7/taxa10\" \"taxa9/taxa32\" #>  #> $min.idx #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #> [1,]    1    1    1    2    3    3    5    6    7     7     8     9     9 #> [2,]   13   20   84    5    8   92    8    9   10    79    60    32    92 #>  #> $`1se.idx` #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #> [1,]    1    1    1    2    3    5    6    6    7     9 #> [2,]   13   20   84    5    8    8    7    9   10    32 fit$step2.tables$min fit$step2.tables$`1se` dat.bin <- simu(n=50,p=100,model=\"binomial\") fit.bin <- FLORAL(dat.bin$xcount,dat.bin$y,family=\"binomial\",ncv=10,progress=FALSE)  dat.cox <- simu(n=50,p=100,model=\"cox\") fit.cox <- FLORAL(dat.cox$xcount,survival::Surv(dat.cox$t,dat.cox$d),family=\"cox\",ncv=10,progress=FALSE)  dat.fg <- simu(n=50,p=100,model=\"finegray\") fit.fg <- FLORAL(dat.cox$xcount,survival::Surv(dat.cox$t,dat.cox$d,type=\"mstate\"),family=\"finegray\",ncv=10,progress=FALSE,step2=FALSE)"},{"path":"https://vdblab.github.io/FLORAL/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Fit Log-Ratio Lasso Regression for Compositional Data","text":"FLORAL package jointly managed MSKCC Biostatistics service Marcel van den Brink Lab. Please note FLORAL project released Contributor Code Conduct. contributing project, agree abide terms. Thank contributors!","code":""},{"path":"https://vdblab.github.io/FLORAL/index.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"Fit Log-Ratio Lasso Regression for Compositional Data","text":"Fei T, Funnell T, Waters NR, Raj SS, Devlin SM, Dai , Miltiadous O, Shouval R, Lv M, Peled JU, Ponce DM, Perales M-, Gönen M, van den Brink MRM, Scalable Log-ratio Lasso Regression Enhances Microbiome Feature Selection Predictive Models, bioRxiv 2023.05.02.538599; doi: https://doi.org/10.1101/2023.05.02.538599.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/FLORAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Log-ratio lasso regression for compositional covariates — FLORAL","title":"Fit Log-ratio lasso regression for compositional covariates — FLORAL","text":"Conduct log-ratio lasso regression continuous, binary survival outcomes.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/FLORAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Log-ratio lasso regression for compositional covariates — FLORAL","text":"","code":"FLORAL(   x,   y,   ncov = 0,   family = \"gaussian\",   longitudinal = FALSE,   id = NULL,   tobs = NULL,   failcode = NULL,   length.lambda = 100,   lambda.min.ratio = NULL,   ncov.lambda.weight = 0,   a = 1,   mu = 1,   ncv = 5,   intercept = FALSE,   foldid = NULL,   step2 = TRUE,   progress = TRUE,   plot = TRUE )"},{"path":"https://vdblab.github.io/FLORAL/reference/FLORAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Log-ratio lasso regression for compositional covariates — FLORAL","text":"x Feature matrix, rows specify subjects columns specify features. first ncov columns patient characteristics rest columns microbiome absolute counts corresponding various taxa. x contains longitudinal data, rows must sorted order subject IDs used y. y Outcome. continuous binary outcome, y vector. survival outcome, y Surv object. ncov integer indicating number first ncov columns x subject zero-sum constraint. family Available options gaussian, binomial, cox, finegray. longitudinal TRUE FALSE, indicating whether longitudinal data matrix specified input x. (Still development. Please use caution) id longitudinal TRUE, id specifies subject IDs corresponding rows input x. tobs longitudinal TRUE, tobs specifies time points corresponding rows input x. failcode family = finegray, failcode specifies failure type interest. must positive integer. length.lambda Number penalty parameters used path lambda.min.ratio Ratio minimum maximum choice lambda. Default NULL, ratio chosen 1e-2. ncov.lambda.weight Weight penalty lambda applied first ncov covariates. Default 0 first ncov covariates penalized. scalar 0 1: weight lasso penalty 1-weight ridge penalty. mu Value penalty augmented Lagrangian ncv Folds cross-validation. Use NULL cross-validation wanted. intercept TRUE FALSE, indicating whether intercept estimated. foldid vector fold indicator. Default NULL. step2 TRUE FALSE, indicating whether second-stage feature selection specific ratios performed features selected main lasso algorithm. performed cross validation enabled. progress TRUE FALSE, indicating whether printing progress bar algorithm runs. plot TRUE FALSE, indicating whether returning plots model fitting.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/FLORAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Log-ratio lasso regression for compositional covariates — FLORAL","text":"list path-specific estimates (beta), path (lambda), others. Details can found README.md.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/FLORAL.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit Log-ratio lasso regression for compositional covariates — FLORAL","text":"Fei T, Funnell T, Waters N, Raj SS et al. Scalable Log-ratio Lasso Regression Enhances Microbiome Feature Selection Predictive Models. bioRxiv 2023.05.02.538599.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/FLORAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit Log-ratio lasso regression for compositional covariates — FLORAL","text":"Teng Fei. Email: feit1@mskcc.org","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/FLORAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Log-ratio lasso regression for compositional covariates — FLORAL","text":"","code":"set.seed(23420)  # Continuous outcome dat <- simu(n=50,p=30,model=\"linear\") fit <- FLORAL(dat$xcount,dat$y,family=\"gaussian\",progress=FALSE,step2=TRUE)  # Binary outcome dat <- simu(n=50,p=30,model=\"binomial\") fit <- FLORAL(dat$xcount,dat$y,family=\"binomial\",progress=FALSE,step2=TRUE)  # Survival outcome dat <- simu(n=50,p=30,model=\"cox\") fit <- FLORAL(dat$xcount,survival::Surv(dat$t,dat$d),family=\"cox\",progress=FALSE,step2=TRUE)  # Competing risks outcome dat <- simu(n=50,p=30,model=\"finegray\") fit <- FLORAL(dat$xcount,survival::Surv(dat$t,dat$d,type=\"mstate\"),failcode=1,               family=\"finegray\",progress=FALSE,step2=FALSE)"},{"path":"https://vdblab.github.io/FLORAL/reference/a.FLORAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparing prediction performances under different choices of weights for lasso/ridge penalty — a.FLORAL","title":"Comparing prediction performances under different choices of weights for lasso/ridge penalty — a.FLORAL","text":"Summarizing FLORAL outputs various choices ","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/a.FLORAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparing prediction performances under different choices of weights for lasso/ridge penalty — a.FLORAL","text":"","code":"a.FLORAL(   a = c(0.1, 0.5, 1),   ncore = 1,   seed = NULL,   x,   y,   ncov = 0,   family = \"gaussian\",   longitudinal = FALSE,   id = NULL,   tobs = NULL,   failcode = NULL,   length.lambda = 100,   lambda.min.ratio = NULL,   ncov.lambda.weight = 0,   mu = 1,   ncv = 5,   intercept = FALSE,   step2 = FALSE,   progress = TRUE )"},{"path":"https://vdblab.github.io/FLORAL/reference/a.FLORAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparing prediction performances under different choices of weights for lasso/ridge penalty — a.FLORAL","text":"vector scalars 0 1 comparison. ncore Number cores used parallel computation. Default use 1 core. seed random seed reproducibility results. default seed numeric form Sys.Date(). x Feature matrix, rows specify subjects columns specify features. first ncov columns patient characteristics rest columns microbiome absolute counts corresponding various taxa. x contains longitudinal data, rows must sorted order subject IDs used y. y Outcome. continuous binary outcome, y vector. survival outcome, y Surv object. ncov integer indicating number first ncov columns x subject zero-sum constraint. family Available options gaussian, binomial, cox, finegray. longitudinal TRUE FALSE, indicating whether longitudinal data matrix specified input x. (Still development. Please use caution) id longitudinal TRUE, id specifies subject IDs corresponding rows input x. tobs longitudinal TRUE, tobs specifies time points corresponding rows input x. failcode family = finegray, failcode specifies failure type interest. must positive integer. length.lambda Number penalty parameters used path lambda.min.ratio Ratio minimum maximum choice lambda. Default NULL, ratio chosen 1e-2. ncov.lambda.weight Weight penalty lambda applied first ncov covariates. Default 0 first ncov covariates penalized. mu Value penalty augmented Lagrangian ncv Folds cross-validation. Use NULL cross-validation wanted. intercept TRUE FALSE, indicating whether intercept estimated. step2 TRUE FALSE, indicating whether second-stage feature selection specific ratios performed features selected main lasso algorithm. performed cross validation enabled. progress TRUE FALSE, indicating whether printing progress bar algorithm runs.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/a.FLORAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparing prediction performances under different choices of weights for lasso/ridge penalty — a.FLORAL","text":"ggplot2 object cross-validated prediction metric versus lambda, stratified . Detailed data can retrieved ggplot2 object .","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/a.FLORAL.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Comparing prediction performances under different choices of weights for lasso/ridge penalty — a.FLORAL","text":"Fei T, Funnell T, Waters N, Raj SS et al. Scalable Log-ratio Lasso Regression Enhances Microbiome Feature Selection Predictive Models. bioRxiv 2023.05.02.538599.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/a.FLORAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Comparing prediction performances under different choices of weights for lasso/ridge penalty — a.FLORAL","text":"Teng Fei. Email: feit1@mskcc.org","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/a.FLORAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparing prediction performances under different choices of weights for lasso/ridge penalty — a.FLORAL","text":"","code":"set.seed(23420)  dat <- simu(n=50,p=30,model=\"linear\") pmetric <- a.FLORAL(a=c(0.1,1),ncore=1,x=dat$xcount,y=dat$y,family=\"gaussian\",progress=FALSE)"},{"path":"https://vdblab.github.io/FLORAL/reference/mcv.FLORAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing selected compositional features over multiple cross validations — mcv.FLORAL","title":"Summarizing selected compositional features over multiple cross validations — mcv.FLORAL","text":"Summarizing FLORAL outputs multiple random k-fold cross validations","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/mcv.FLORAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing selected compositional features over multiple cross validations — mcv.FLORAL","text":"","code":"mcv.FLORAL(   mcv = 10,   ncore = 1,   seed = NULL,   x,   y,   ncov = 0,   family = \"gaussian\",   longitudinal = FALSE,   id = NULL,   tobs = NULL,   failcode = NULL,   length.lambda = 100,   lambda.min.ratio = NULL,   ncov.lambda.weight = 0,   a = 1,   mu = 1,   ncv = 5,   intercept = FALSE,   step2 = TRUE,   progress = TRUE,   plot = TRUE )"},{"path":"https://vdblab.github.io/FLORAL/reference/mcv.FLORAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing selected compositional features over multiple cross validations — mcv.FLORAL","text":"mcv Number random `ncv`-fold cross-validation performed. ncore Number cores used parallel computation. Default use 1 core. seed random seed reproducibility results. default seed numeric form Sys.Date(). x Feature matrix, rows specify subjects columns specify features. first ncov columns patient characteristics rest columns microbiome absolute counts corresponding various taxa. x contains longitudinal data, rows must sorted order subject IDs used y. y Outcome. continuous binary outcome, y vector. survival outcome, y Surv object. ncov integer indicating number first ncov columns x subject zero-sum constraint. family Available options gaussian, binomial, cox, finegray. longitudinal TRUE FALSE, indicating whether longitudinal data matrix specified input x. (Still development. Please use caution) id longitudinal TRUE, id specifies subject IDs corresponding rows input x. tobs longitudinal TRUE, tobs specifies time points corresponding rows input x. failcode family = finegray, failcode specifies failure type interest. must positive integer. length.lambda Number penalty parameters used path lambda.min.ratio Ratio minimum maximum choice lambda. Default NULL, ratio chosen 1e-2. ncov.lambda.weight Weight penalty lambda applied first ncov covariates. Default 0 first ncov covariates penalized. scalar 0 1: weight lasso penalty 1-weight ridge penalty. mu Value penalty augmented Lagrangian ncv Folds cross-validation. Use NULL cross-validation wanted. intercept TRUE FALSE, indicating whether intercept estimated. step2 TRUE FALSE, indicating whether second-stage feature selection specific ratios performed features selected main lasso algorithm. performed cross validation enabled. progress TRUE FALSE, indicating whether printing progress bar algorithm runs. plot TRUE FALSE, indicating whether returning summary plots selection probability taxa features.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/mcv.FLORAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing selected compositional features over multiple cross validations — mcv.FLORAL","text":"list relative frequencies certain feature selected mcv  ncv-fold cross-validations.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/mcv.FLORAL.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarizing selected compositional features over multiple cross validations — mcv.FLORAL","text":"Fei T, Funnell T, Waters N, Raj SS et al. Scalable Log-ratio Lasso Regression Enhances Microbiome Feature Selection Predictive Models. bioRxiv 2023.05.02.538599.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/mcv.FLORAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarizing selected compositional features over multiple cross validations — mcv.FLORAL","text":"Teng Fei. Email: feit1@mskcc.org","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/mcv.FLORAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing selected compositional features over multiple cross validations — mcv.FLORAL","text":"","code":"set.seed(23420)  dat <- simu(n=50,p=30,model=\"linear\") fit <- mcv.FLORAL(mcv=2,ncore=1,x=dat$xcount,y=dat$y,family=\"gaussian\",progress=FALSE,step2=TRUE)"},{"path":"https://vdblab.github.io/FLORAL/reference/simu.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data following log-ratio model — simu","title":"Simulate data following log-ratio model — simu","text":"Simulate dataset log-ratio model.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/simu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data following log-ratio model — simu","text":"","code":"simu(   n = 100,   p = 200,   model = \"linear\",   weak = 4,   strong = 6,   weaksize = 0.125,   strongsize = 0.25,   pct.sparsity = 0.5,   rho = 0,   ncov = 0,   betacov = 0,   intercept = FALSE )"},{"path":"https://vdblab.github.io/FLORAL/reference/simu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data following log-ratio model — simu","text":"n integer sample size p integer number features (taxa). model Type models associated outcome variable, can \"linear\", \"binomial\", \"cox\", \"finegray\". weak Number features weak effect size. strong Number features strong effect size. weaksize Actual effect size weak effect size. Must positive. strongsize Actual effect size strong effect size. Must positive. pct.sparsity Percentage zero counts sample. rho Parameter controlling correlated structure taxa. Ranges 0 1. ncov Number covariates compositional features. betacov Coefficients corresponding covariates compositional features. intercept Boolean. TRUE, random intercept generated model. works linear binomial models.","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/simu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data following log-ratio model — simu","text":"list simulated count matrix xcount, log1p-transformed count matrix x, outcome (continuous y, continuous centered y0, binary y, survival t, d), true coefficient vector beta, list non-zero features idx, value intercept intercept (applicable).","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/simu.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate data following log-ratio model — simu","text":"Teng Fei. Email: feit1@mskcc.org","code":""},{"path":"https://vdblab.github.io/FLORAL/reference/simu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data following log-ratio model — simu","text":"","code":"set.seed(23420) dat <- simu(n=50,p=30,model=\"linear\")"},{"path":"https://vdblab.github.io/FLORAL/news/index.html","id":"floral-development-version","dir":"Changelog","previous_headings":"","what":"FLORAL (development version)","title":"FLORAL (development version)","text":"Including examples document compared CRAN version (0.1.0.9000) Enables elastic net models. Users can specify weight lasso penalty using argument . (0.1.0.9001) Allows adding non-compositional covariates constrained zero-sum constraint. (0.1.0.9001) Adds function mcv.FLORAL() perform multiple runs k-fold cross-validation summarize selection probabilities features. (0.1.0.9001) Adds function .FLORAL() compare different choices elastic net weight fixed cross-validation setting. (0.1.0.9001)","code":""},{"path":"https://vdblab.github.io/FLORAL/news/index.html","id":"floral-010","dir":"Changelog","previous_headings":"","what":"FLORAL 0.1.0","title":"FLORAL 0.1.0","text":"CRAN release: 2023-05-11 Initial release.","code":""}]
